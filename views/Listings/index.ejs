<% layout('/layouts/boilerplate.ejs') %>

    <div id="filters" class="flex justify-around gap-2 flex-wrap mt-7 mb-8">
        <div class="filter flex flex-col items-center" data-tag="trending">
            <div><i class="fa-solid fa-fire"></i></div>
            <p>Trending</p>
        </div>
        <div class="filter flex flex-col items-center" data-tag="rooms">
            <div><i class="fa-solid fa-bed"></i></div>
            <p>Rooms</p>
        </div>
        <div class="filter flex flex-col items-center" data-tag="iconic cities">
            <div><i class="fa-solid fa-mountain-city"></i></div>
            <p>Iconic cities</p>
        </div>
        <div class="filter flex flex-col items-center" data-tag="mountains">
            <div><i class="fa-solid fa-mountain"></i></div>
            <p>Mountains</p>
        </div>
        <div class="filter flex flex-col items-center" data-tag="castles">
            <div><i class="fa-brands fa-fort-awesome"></i></div>
            <p>Castles</p>
        </div>
        <div class="filter flex flex-col items-center" data-tag="amazing pools">
            <div><i class="fa-solid fa-person-swimming"></i></div>
            <p>Amazing pools</p>
        </div>
        <div class="filter flex flex-col items-center" data-tag="camping">
            <div><i class="fa-solid fa-campground"></i></div>
            <p>Camping</p>
        </div>
        <div class="filter flex flex-col items-center" data-tag="farms">
            <div><i class="fa-solid fa-tractor"></i></div>
            <p>Farms</p>
        </div>
        <div class="filter flex flex-col items-center" data-tag="arctic">
            <div><i class="fa-regular fa-snowflake"></i></div>
            <p>Arctic</p>
        </div>
        <div class="tax-toggle">
            <div class="form-check-reverse form-switch">
                <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault">
                <label class="form-check-label" for="flexSwitchCheckDefault">Price with Tax</label>
            </div>
        </div>
    </div>



    <div class="grid grid-cols-1 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mt-3 px-4">
        <% for (let listing of allListings) { %>
            <div class="bg-white rounded-lg shadow-md overflow-hidden"
                data-tags="<%= listing.tags.join(',').toLowerCase() %>">
                <a href="/listings/<%= listing._id %>" class="block hover:opacity-80 transition">
                    <img src="<%= listing.image.url %>" class="w-full h-72 object-cover" alt="Image is processing" />
                    <div class="p-4">
                        <h5 class="text-xl font-semibold mb-2">
                            <%= listing.title %>
                        </h5>
                        <p class="text-gray-700">
                            &#8377;<span id="price-<%= listing._id %>" data-original-price="<%= listing.price %>">
                                <%= listing.price.toLocaleString("en-IN") %>
                            </span> <i class="tax-info text-sm text-gray-500"> (Excluding GST)</i>
                            <br />
                            <i class="fa-solid fa-location-dot text-gray-600"></i>
                            <%= listing.location %>
                                <br />
                                <i class="fa-solid fa-globe text-gray-600"></i>
                                <%= listing.country %>
                                    <br /><br>
                                    <span class="tags flex flex-wrap gap-2">
                                        <% for(let tag of listing.tags ) { if(tag !="null" ) { %>
                                            <span
                                                class="bg-gray-100 text-gray-800 px-2 py-1 rounded-full flex items-center gap-1">
                                                <i class="fa-light fa-hashtag"></i>
                                                <%= tag %>
                                            </span>
                                            <% } } %>
                                    </span>
                        </p>
                    </div>
                </a>
            </div>
            <% } %>
    </div>

    <script>

        // For tax switch 
        const taxSwitch = document.getElementById("flexSwitchCheckDefault");
        const taxRate = 0.18; // 18% GST

        taxSwitch.addEventListener("click", () => {
            const priceElements = document.querySelectorAll('span[id^="price-"]');

            for (const priceElement of priceElements) {
                const originalPrice = parseFloat(priceElement.dataset.originalPrice);
                const taxAmount = originalPrice * taxRate;
                const displayedPrice = taxSwitch.checked ? (originalPrice + taxAmount).toLocaleString("en-IN") : originalPrice.toLocaleString("en-IN");

                priceElement.textContent = displayedPrice;
            }
            let taxInfo = document.getElementsByClassName("tax-info");
            for (info of taxInfo) {
                if (info.textContent.includes("Including")) {
                    info.textContent = ` (Excluding GST)`;
                } else {
                    info.textContent = ` (Including GST)`;
                }
            }
        });


        const filters = document.querySelectorAll('.filter');
        const listings = document.querySelectorAll('.bg-white.rounded-lg.shadow-md');
        let activeTags = [];

        // Toggle filter selection and apply filtering
        filters.forEach(filter => {
            filter.addEventListener('click', function () {
                const selectedTag = this.dataset.tag.toLowerCase();

                // Toggle the active state for the filter
                if (activeTags.includes(selectedTag)) {
                    activeTags = activeTags.filter(tag => tag !== selectedTag);
                    this.classList.remove('active');
                } else {
                    activeTags.push(selectedTag);
                    this.classList.add('active');
                }

                filterListings();
            });
        });

        // Function to filter listings based on active tags
        function filterListings() {
            listings.forEach(listing => {
                const listingTags = listing.dataset.tags.split(',');
                const hasAllTags = activeTags.every(tag => listingTags.includes(tag));

                if (hasAllTags || activeTags.length === 0) {
                    listing.style.display = 'block';
                } else {
                    listing.style.display = 'none';
                }
            });
        }
    </script>